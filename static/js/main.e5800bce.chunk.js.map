{"version":3,"sources":["Clock.js","Greeting.js","TodoList.js","TodoService.js","Weather.js","App.js","serviceWorker.js","index.js"],"names":["Clock","state","clock","month","day","weekStr","weekArr","getTime","date","Date","getMonth","getDate","week","getDay","hour","getHours","minute","getMinutes","second","getSeconds","setState","this","setInterval","className","Component","Greeting","isGreeting","inputValue","name","greetingBackStr","getUserName","userName","localStorage","getItem","paintGreeting","handlerChange","event","value","target","handleSubmit","preventDefault","setItem","getGreetingText","onSubmit","type","onChange","placeholder","src","alt","TodoList","id","text","arrcnt","handlerDeleteBtn","parentUl","parentNode","removeTarget","console","log","removeChild","arrForLSSave","JSON","parse","filter","todo","parseInt","nextSibling","innerText","stringify","todoText","props","todoID","id_cnt","onClick","TodoService","handlerSubmit","todoArr","push","Weather","api_key","weatherInfo","checkCoords","a","LS_COORDS","getCoords","getWeatherData","currentWeatherInfo","coordsObj","obj","fetch","latitude","longitude","then","Response","json","jsonData","main","temp","catch","err","navigator","geolocation","getCurrentPosition","handleGeoSuccess","position","coords","App","addTodo","onSubmittst","getLSTodoList","todoListArr","todoLiElem","map","index","addLSTodoList","addResult","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e5800bce.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// =====================================================================\r\n\r\nclass Clock extends Component{\r\n    state = {\r\n        clock: \"\",\r\n        month: \"\",\r\n        day: \"\",\r\n        weekStr: \"\",\r\n        weekArr: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getTime();\r\n        setInterval(this.getTime, 1000);\r\n    };\r\n\r\n    getTime = () => {\r\n        const date = new Date();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        const week = this.state.weekArr[date.getDay()];\r\n        let hour = date.getHours() < 10 ? `0${date.getHours()}` : `${date.getHours()}`;\r\n        // hour = hour > 12 ? parseInt(hour) - 12 : hour;\r\n        const minute = date.getMinutes() < 10 ? `0${date.getMinutes()}` : `${date.getMinutes()}`;\r\n        const second = date.getSeconds() < 10 ? `0${date.getSeconds()}` : `${date.getSeconds()}`;\r\n    \r\n        this.setState({\r\n            clock: `${hour}:${minute}:${second}`,\r\n            month: month,\r\n            day: day,\r\n            weekStr: week\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"clockDiv\">\r\n                <span className=\"clockSpan clockFirstElem\">{this.state.clock}</span>\r\n                <span className=\"clockDaySpan\">{`${this.state.month}월 ${this.state.day}일`}</span>\r\n                <span className=\"clockDaySpan clockLastElem\">{this.state.weekStr}</span>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n// =====================================================================\r\n\r\nexport default Clock","import React, { Component } from 'react';\r\n\r\n// ===============================================================================\r\n\r\nclass Greeting extends Component{\r\n  state = {\r\n    isGreeting: false,\r\n    inputValue: \"\",\r\n    name: \"\",\r\n    greetingBackStr: \"Welcome to This Page!\",\r\n  };\r\n\r\n  componentDidMount(){\r\n      this.getUserName();\r\n  }\r\n\r\n  getUserName = () => {\r\n    const userName = localStorage.getItem(\"clock_user_name\");\r\n\r\n    if(userName === null){\r\n        this.setState({\r\n            isGreeting: false\r\n        });\r\n    }else{\r\n        this.setState({\r\n            isGreeting: true\r\n        });\r\n        this.paintGreeting(userName);\r\n    }\r\n  };\r\n\r\n  paintGreeting = (name) => {\r\n      this.setState({\r\n          name\r\n      });\r\n  };\r\n\r\n  handlerChange = (event) => {\r\n      const value = event.target.value;\r\n      this.setState({\r\n          inputValue: value\r\n      });\r\n\r\n      this.paintGreeting(value);\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n      event.preventDefault();\r\n\r\n      this.setState({\r\n          isGreeting: true\r\n      });\r\n      localStorage.setItem(\"clock_user_name\", this.state.name);\r\n  }\r\n\r\n  getGreetingText = () => {\r\n    return `Hello ${this.state.name}!`;\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <div className=\"greetingDiv\">\r\n            <form onSubmit={this.handleSubmit} \r\n            className={this.state.isGreeting === true ? \"hiddenCls greetingForm\" : \"showCls greetingForm\"}>\r\n                <input type=\"text\" value={this.state.inputValue} onChange={this.handlerChange} placeholder=\"Please enter your name...\"></input>\r\n            </form>\r\n            <span className={this.state.isGreeting === true ? \"showCls greetingSpan\" : \"hiddenCls greetingSpan\"}>\r\n                {this.getGreetingText()} <br></br> {this.state.greetingBackStr}\r\n            </span>\r\n            <span className=\"guideDownList\">Scroll down to see the TodoList.<br/><img src=\"images/down_2.png\" alt=\"\" className=\"arrow_img_ScrollDown\"/></span>\r\n        </div>\r\n    ); \r\n  };\r\n}\r\n\r\n// ===============================================================================\r\nexport default Greeting;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\n// ===============================================================================\r\n\r\nclass TodoList extends Component{\r\n    state = {\r\n        id: 0,\r\n        text: \"\",\r\n        arrcnt: 0,\r\n    }\r\n\r\n    componentDidMount(){\r\n        const todoText = this.props.todo.text;\r\n        const todoID = this.props.todo.id;\r\n        const id_cnt = localStorage.getItem(\"todo_id_cnt\");\r\n\r\n        if(id_cnt === null || id_cnt === \"NaN\"){\r\n            localStorage.setItem(\"todo_id_cnt\", 1);\r\n        }\r\n\r\n        this.setState({\r\n            id: todoID,\r\n            text: todoText\r\n        });\r\n    }\r\n\r\n    handlerDeleteBtn = (event) => {\r\n        const parentUl = event.target.parentNode.parentNode;\r\n        const removeTarget = event.target.parentNode;\r\n        console.log(removeTarget);\r\n\r\n        parentUl.removeChild(removeTarget);\r\n        const LS_TODO_LIST = JSON.parse(localStorage.getItem(\"todo_list\"));\r\n        const arrForLSSave = LS_TODO_LIST.filter((todo) => { \r\n            console.log(todo.id, parseInt(removeTarget.id), todo.text, event.target.nextSibling.innerText);\r\n            return (todo.id !== parseInt(removeTarget.id)) || (todo.text !== event.target.nextSibling.innerText); \r\n        });\r\n        localStorage.setItem(\"todo_list\", JSON.stringify(arrForLSSave));\r\n\r\n        return \"\";\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <li id={this.state.id}>\r\n                <button onClick={this.handlerDeleteBtn}>X</button>\r\n                <span>{this.state.text}</span>\r\n            </li>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n// ===============================================================================\r\n\r\nexport default TodoList","import React, { Component } from 'react';\r\n\r\n\r\n// ===============================================================================\r\n\r\nclass TodoService extends Component{\r\n    state = {\r\n        inputValue: \"\"\r\n    };\r\n\r\n\r\n    handlerChange = (event) => {\r\n        this.setState({\r\n            inputValue: event.target.value\r\n        });\r\n    }\r\n\r\n    handlerSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        let id_cnt = localStorage.getItem(\"todo_id_cnt\");\r\n        if(id_cnt === null || id_cnt === \"NaN\") {\r\n            localStorage.setItem(\"todo_id_cnt\", 1); \r\n            id_cnt = 1;\r\n        }\r\n\r\n        let todoArr = JSON.parse(localStorage.getItem(\"todo_list\"));\r\n        todoArr = todoArr === null ? [] : todoArr;\r\n        todoArr.push({\r\n            id: parseInt(id_cnt),\r\n            text: this.state.inputValue\r\n        });\r\n        \r\n        localStorage.setItem(\"todo_list\", JSON.stringify(todoArr));\r\n        localStorage.setItem(\"todo_id_cnt\", parseInt(id_cnt) + 1);\r\n\r\n        this.setState({\r\n            inputValue: \"\"\r\n        });\r\n        this.props.onSubmit(this.state.inputValue);\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handlerSubmit} className=\"todoForm\">\r\n                <input type=\"text\" value={this.state.inputValue} onChange={this.handlerChange} placeholder=\"What's your today's to do list??\"/>\r\n            </form>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n// ===============================================================================\r\n\r\nexport default TodoService","import React, { Component } from 'react';\r\nimport './css/Weather.css';\r\n\r\n\r\nclass Weather extends Component{\r\n  state = {\r\n    api_key: 'b8ca631cabd6155a38fc9511df30eb5e',\r\n    weatherInfo: \"\"\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.checkCoords();\r\n  }\r\n\r\n  checkCoords = async() => {\r\n    const LS_COORDS = localStorage.getItem(\"coords\");\r\n\r\n    if(LS_COORDS === null){\r\n      this.getCoords();\r\n    }else{\r\n      const currentWeatherInfo = await this.getWeatherData(LS_COORDS);\r\n      this.setState({\r\n        weatherInfo: currentWeatherInfo\r\n      });\r\n    }\r\n  };\r\n\r\n  getWeatherData = (coordsObj) => {\r\n    const obj = JSON.parse(coordsObj);\r\n\r\n    return fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${obj.latitude}&lon=${obj.longitude}&appid=${this.state.api_key}&units=metric`)\r\n    .then(Response => Response.json())\r\n    .then(jsonData => `${jsonData.main.temp}℃ @ ${jsonData.name}`)\r\n    .catch(err => console.log(err));\r\n  };\r\n\r\n  getCoords = () => {\r\n    navigator.geolocation.getCurrentPosition(this.handleGeoSuccess, () => console.log(\"Geo handle error!!\"));\r\n  };\r\n\r\n  handleGeoSuccess = async (position) => {\r\n    const latitude = position.coords.latitude;\r\n    const longitude = position.coords.longitude;\r\n    const coordsObj = {\r\n      latitude,\r\n      longitude\r\n    };\r\n    localStorage.setItem(\"coords\", JSON.stringify(coordsObj));\r\n\r\n    const currentWeatherInfo = await this.getWeatherData(localStorage.getItem(\"coords\"));\r\n    this.setState({\r\n      weatherInfo: currentWeatherInfo\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <header>\r\n          <span>{this.state.weatherInfo ? this.state.weatherInfo : \"Loading...\"}</span>\r\n      </header>\r\n    ); \r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport Clock from './Clock.js';\nimport Greeting from './Greeting.js';\nimport TodoList from './TodoList.js';\nimport TodoService from './TodoService.js';\nimport Weather from './Weather';\n// import ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\n// import ArrowDropUp from \"@material-ui/icons/ArrowDropUp\";\n\n\nclass App extends Component{\n  state = {\n    addTodo: false\n  }\n\n\n  componentDidMount(){\n    \n  }\n\n  \n  onSubmittst = (text) => {\n    if(text !== null){\n      this.setState({\n        addTodo: true\n      });\n    };\n  };\n\n\n  getLSTodoList = () => {\n    const todoListArr = JSON.parse(localStorage.getItem(\"todo_list\"));\n    let todoLiElem = \"\";\n    \n    if(todoListArr !== null){\n      todoLiElem = todoListArr.map((todo, index) => {\n        return <TodoList todo={todo} index={index}/>        \n      });\n    }\n\n    return todoLiElem;\n  };\n\n  addLSTodoList = () => {\n    let addResult = \"\";\n    // if(this.state.addTodo){\n      addResult = this.getLSTodoList();\n\n      this.setState({\n        addTodo: false\n      });\n    // }\n    return addResult; \n  }\n\n\n  render(){\n    return(\n      <div className=\"mainBodyDiv\">\n        <div className=\"welcomeDiv\">\n          <img src=\"/images/yellow_back.PNG\" className=\"clockBgImg\"/>\n          <Clock />\n          <Greeting />          \n        </div>\n        <div className=\"todoDiv\">\n          <Weather />\n          <div className=\"todoListSection\">\n            <span className=\"iconspan\">\n              <img src=\"images/down.png\" alt=\"\" className=\"arrow_img\"/>\n              <span className=\"todoListTitle\">To do List</span>\n              <img src=\"images/up.png\" alt=\"\" className=\"arrow_img\"/>\n            </span>\n            <TodoService onSubmit={this.onSubmittst}/>\n            <ul className=\"todoListUl\">\n              {this.getLSTodoList()}\n              {this.state.addTodo ? this.addLSTodoList() : \"\"}\n              {/* {this.addLSTodoList()} */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}